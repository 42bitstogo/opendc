version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_OAUTH_CLIENT_ID=${OPENDC_OAUTH_CLIENT_ID}
    image: frontend
    restart: on-failure
    ports:
      - "8081:80"
    networks:
      - backend

  api:
    build: ./api
    image: api
    restart: on-failure
    networks:
      - backend
    depends_on:
      - mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE
      - OPENDC_DB
      - OPENDC_DB_USERNAME
      - OPENDC_DB_PASSWORD
      - OPENDC_DB_HOST=mongo
      - OPENDC_FLASK_SECRET
      - OPENDC_OAUTH_CLIENT_ID
      - OPENDC_ROOT_DIR
      - OPENDC_SERVER_BASE_URL

  simulator:
    build: ./simulator
    image: simulator
    restart: on-failure
    networks:
      - backend
      - spark
    depends_on:
      - mongo
      - spark-master
      - spark-worker
    volumes:
      - type: bind
        source: ./traces
        target: /home/gradle/simulator/traces
      - type: volume
        source:  results-volume
        target: /results
    # Override to root as the simulator won't be able to access the volume otherwise
    user: root
    environment:
     - OPENDC_DB
     - OPENDC_DB_USERNAME
     - OPENDC_DB_PASSWORD
     - OPENDC_DB_HOST=mongo
     - OPENDC_OUTPUT=/results
     - OPENDC_SPARK=spark://spark-master:7077

  spark-master:
    image: docker.io/bitnami/spark:3-debian-10
    networks:
      - spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    # Comment out for public deployment
    ports:
      - "8080:8080"
      - "7077:7077"

  spark-worker:
    image: docker.io/bitnami/spark:3-debian-10
    networks:
      - spark
    depends_on:
      - spark-master
    volumes:
      - type: volume
        source: results-volume
        target: /results
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
    - "7081:8081"

  mongo:
    build:
      context: database
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE
      - OPENDC_DB
      - OPENDC_DB_USERNAME
      - OPENDC_DB_PASSWORD
    networks:
      - backend
    # Comment out for public deployment
    ports:
      - "27017:27017"
    # Uncomment for persistent deployment
    volumes:
      - mongo-volume:/data/db

  mongo-express:
    image: mongo-express
    restart: on-failure
    networks:
      - backend
    depends_on:
      - mongo
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"

volumes:
  mongo-volume:
    external: false
  results-volume:

networks:
  backend: {}
  spark: {}
