/*
 * MIT License
 *
 * Copyright (c) 2018 atlarge-research
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*Â Jacoco task for root project to generate merged report */
apply plugin: 'jacoco'

repositories {
    mavenLocal()
    mavenCentral()
}

task jacocoMerge(type: JacocoMerge, dependsOn: subprojects.test) {
    executionData = files(subprojects.jacocoTestReport.executionData)

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: jacocoMerge) {
    group = 'Coverage reports'
    description = 'Generate an aggregate report from all subprojects'

    executionData tasks.jacocoMerge.destinationFile
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true 
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}
